"""Test

Revision ID: 2ebf6e7b2015
Revises: 
Create Date: 2025-06-05 18:03:29.226172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ebf6e7b2015'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_users',
    sa.Column('reason', sa.String(length=48), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_telegram_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_telegram_id')
    )
    op.create_index(op.f('ix_blacklist_users_id'), 'blacklist_users', ['id'], unique=False)
    op.create_table('feedbacks',
    sa.Column('message', sa.String(length=256), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=False),
    sa.Column('will_he_buy_more', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_telegram_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_telegram_id')
    )
    op.create_index(op.f('ix_feedbacks_id'), 'feedbacks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedbacks_id'), table_name='feedbacks')
    op.drop_table('feedbacks')
    op.drop_index(op.f('ix_blacklist_users_id'), table_name='blacklist_users')
    op.drop_table('blacklist_users')
    # ### end Alembic commands ###
